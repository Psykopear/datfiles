# TODO: This whole config file is messy, you can do better

# Mouse support
set -g mouse on

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg black #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# set window split
bind-key v split-window -h -p 10
bind-key b split-window -v -l 10

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg black

# active window title colors
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg colour235
set-window-option -g window-status-current-format ' #[fg=white,bold]#{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) '
set-window-option -g window-status-format ' #[fg=white,bold]#{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) '

set-option -g set-titles on
set-option -g set-titles-string "#W"


# pane border
set -g pane-border-fg brightyellow
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# message text
set-option -g message-bg colour235
set-option -g message-fg colour166

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour green

# Statusbar
set -g status-interval 1
set -g status-justify left
set -g status-left ''
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load)'
set-option -g status-position top

# Avoid showing "Activity in windows x"
set -g visual-activity off
set -g monitor-activity off

# C-b is not acceptable -- Vim uses it
# So let's use C-a. That's used by vim anyway lol
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Vi copypaste mode
set-window-option -g mode-keys vi

# Vim and tmux seamless panes integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# HJKL pane resize
bind-key -r H resize-pane -L 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 1

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# color
set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",*256col*:Tc"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Set focus events for correct integration with vim
set -g focus-events on

# Create named window
bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"
